
Examples
========

* Compute all subclasses
* Link models and meta-models
* Intercept validation
* Change the semantics of "set" so that for multivalued features 
  we don't need to do "get(f).add" which is annoying and requires "an if"
  in the reflective setting. Could also solve the multithreaded problem?
  We can synchronize the object...

* Prototype modelling

* Implement the type-object pattern => Implicit promotions

* ATL/MOP to extract dynamic footprints using the ResourceType library.

* AutoAdd, a library to automatically add elements to a given resource.
  This will be an example of "local library", that is configured for
  a specific scope.

Package MOP operations as libraries
	=> Annotations + an interpreter to instantiate the MOP

* A subset of our MOP is already covered by ENotification framework, but
  - Not all (e.g., onInstantiate -> different from ADD)
  - Other facilities: validation, code-gen
  - We consider also manipulation (e.g., ATL, Epsilon, Xtext)
  - It provides an homogenous protocolo for interacting with the meta-modelling framework
  
For generated meta-models we either to 
	a) to extends JET templates
	b) generate an aspect for each class


Our implementation using aspects also show that could be
possible to modularly define the MOP...